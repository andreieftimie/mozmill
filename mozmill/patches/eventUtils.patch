diff --git a/mozmill/mozmill/extension/resource/stdlib/EventUtils.js b/mozmill/mozmill/extension/resource/stdlib/EventUtils.js
index 27fbbc7..0329d47 100644
--- a/mozmill/mozmill/extension/resource/stdlib/EventUtils.js
+++ b/mozmill/mozmill/extension/resource/stdlib/EventUtils.js
@@ -1,3 +1,24 @@
+// Export all available functions for Mozmill
+var EXPORTED_SYMBOLS = ["disableNonTestMouseEvents","sendMouseEvent", "sendChar",
+                        "sendString", "sendKey", "synthesizeMouse", "synthesizeTouch",
+                        "synthesizeMouseAtPoint", "synthesizeTouchAtPoint",
+                        "synthesizeMouseAtCenter", "synthesizeTouchAtCenter",
+                        "synthesizeWheel", "synthesizeKey",
+                        "synthesizeMouseExpectEvent", "synthesizeKeyExpectEvent",
+                        "synthesizeText",
+                        "synthesizeComposition", "synthesizeQuerySelectedText"];
+
+const Ci = Components.interfaces;
+const Cc = Components.classes;
+
+var window = Cc["@mozilla.org/appshell/appShellService;1"]
+             .getService(Ci.nsIAppShellService).hiddenDOMWindow;
+
+var _EU_Ci = Ci;
+var navigator = window.navigator;
+var KeyEvent = window.KeyEvent;
+var parent = window.parent;
+
+function is(aExpression1, aExpression2, aMessage) {
+  if (aExpression1 !== aExpression2) {
+    throw new Error(aMessage);
+  }
+}
+
 /**
  * EventUtils provides some utility methods for creating and sending DOM events.
  * Current methods:
@@ -15,18 +42,6 @@
  *  When adding methods to this file, please add a performance test for it.
  */
 
-// This file is used both in privileged and unprivileged contexts, so we have to
-// be careful about our access to Components.interfaces. We also want to avoid
-// naming collisions with anything that might be defined in the scope that imports
-// this script.
-window.__defineGetter__('_EU_Ci', function() {
-  // Even if the real |Components| doesn't exist, we might shim in a simple JS
-  // placebo for compat. An easy way to differentiate this from the real thing
-  // is whether the property is read-only or not.
-  var c = Object.getOwnPropertyDescriptor(window, 'Components');
-  return c.value && !c.writable ? Components.interfaces : SpecialPowers.Ci;
-});
-
 /**
  * Send a mouse event to the node aTarget (aTarget can be an id, or an
  * actual node) . The "event" passed in to aEvent is just a JavaScript
